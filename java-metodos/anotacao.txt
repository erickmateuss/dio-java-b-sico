#2
Métodos // Todas as ações das aplicações são consideradas métodos.

Uma classe é definida por atributos e métodos. Já vimos que atributos são, em sua grande maioria, variáveis de diferentes tipos e valores.
Os métodos, por sua vez, correspondem a funções ou sub-rotinas disponíveis dentro de nossas classes

Critério de nomeação de Métodos
Esses critérios não são obrigatórios, mas é recomendável que sejam seguidos, pois essas convenções facilitam a vida dos programadores ao trabalharem em códigos de forma colaborativa. 
Ao seguir estas convenções, tornamos o código mais legível para nós e também para outras pessoas. Para métodos critérios são:

.Deve ser nomeado como VERBO
.Seguir o padrão camelCase (Todas as letras minúsculas com a exceção da primeira letra da segunda palavra).

Exemplos sugeridos para nomeclatura de métodos:

somar (int n1, n2) {}

abrirConexao () {}

concluirProcessamento () {}

findById (int id) {} 

calcularImprimir () {} 

ATENÇÃO!!!:Não existem em JAVA o conceito de métodos globais. Todos os métodos devem SEMPRE ser definidos dentro de uma classe.

Critério de definição de métodos

Mas, como sabemos a melhor forma de definir os métodos das nossas classes? Para chegar à essa conclusão, somos auxiliares por uma convenção estrutural
para todos os métodos. Essa convenção é determinada pelos aspectos abaixo:

1.Qual a proposta principal do métodos? 
Você deve se perguntar constantemente até compreender a real finalidade do mesmo.

2.Qual o tipo de retorno esperado após executar o método? 
Você deve analisar se o método será responsável por retornar algum valor ou não.

!! Caso o método não retorne nenhum valor, ele será representado pela palavra-chave  "void".

1.Quais os parâmetro serão necessários para execução do método?
Os métodos as vezes precisão de argumentos como critérios para a execução

2. O método possui o risco de apresentar algumas exceção?
Exceções são comuns na execução de métodos, as vezes é necessário prever e tratar a possível existência de uma exceção.

3.Qual a visibilidade do método?
Será necessário que o método seja visível a toda aplicação, somente em mesmo pacotes, através de herança ou somente a nível a própria classe.

Exemplo:

public class MyClass {

  public double somar(int num1, int num2) {
    //LOGICA - FINALIDADE DO Métodos
    return ....;
  }
}

#3
