#1 Pilares do Poo

Programação orientada a objetos (POO, ou OOP segundo as suas siglas em inglês) é um paradigma de programação baseado no conceito de "objetos",
que podem conter dados na forma de campos, também conhecidos como atributos, e códigos, na forma de procedimentos, também conhecidos como métodos.

Como se trata de um contexto análogo ao mundo real, tudo no qual nos referimos são objetos, exemplos: Conta bancária, Aluno, Veículo, Transferência etc.

A programação orientada a objetos é bem requisitada no contexto das aplicações mais atuais no mercado devido a possibilidade de reutilização de código e a 
capacidade de representação do sistema ser muito mais próximo do  mundo real.
Para uma linguagem ser considerada orientada a objetos, esta deve seguir o que denominamos como _Os quatro pilares da orientação a objeots:_ 

.Encapsulamento: Nem tudo precisa estar visível, grande parte do nosso algoritmo pode ser distribuído em métodos com finalidades específicas que complementa uma 
ação em nossa aplicação.
Exemplo: Ligar um veículo exige muitas etapas para a engenhaira, mas o condutor sóvisualiza a ignição, dar a partida e a "magia" acontece.

.Herança: Características e comportamentos comuns podem ser elevados e compartilhados através de uma hierarquia de objetos.
Exemplo: Um Carro e uma Motocicleta possuem propriedades como  placa, chassi, ano de fabricação e métodos como acelerar, frear. Logo para não ser um processo de codificação
redudante, podemos desfrutar da herança criando uma classe Veiculo para que seja herdada por Carro e Motocicleta.

.Abstração: É a indisponibilidade para determinar a lógica de um ou vários comportamentos em um objeto.
Exemplo: Veículo determina duas ações como acelerar e frear, logo estes comportamentos deverão ser abstratos pois existem mais de uma maneira de se realizar a mesma operação.

.Polimorfismo: São as inúmeras maneiras de se realizar uma mesma ação. 
Exemplo: Veículo determina duas ações como acelerar e frear, primeiramente precisamos identificar se estaremos nos referindo a Carro ou Motocicleta para determina a lógica de aceleração e frenagem dos respectivos veículos.



MSN Messenger fio um programa de mensagens instantâneas criado pela Microsoft Corporation. O serviço nasceu a 22 de julho de 1999, anunciando-se como um serviço que permitia falar
com uma pessoa através de conversas instantâneas pela internet. Ao longo dos anos surgiram novos serviços de mensagens pela internet como Facebook Messenger e o VKontakte Telegram.

Encapsulamento já imaginou você instalar o MSN Messenger e ao querer enviar uma mensagem, te fosse solicitado verificar se o computador está conectado a internet e depois, pedir para você salvar a mensagem no histórico?
Ou, se ao tentar enviar um SMS pelo celular, primeiro você precisasse consultar manualmente o seu saldo?

Herança já imaginou você ter sido classificado para vaga de emprego de seus sonhos e como desafio, justamente você criar um diagrama de classes e em seguida os respectivos arquivos .java que apresentasse os fundamentos de POO
com base no contexto de vários aplicativos de mensagens instantâneas? Sorte sua que você está nos acompanhando em nossa jornada


Abstração Sabemos que qualquer sistema de mensagens instantâneas se realiza as mesmas operações de Enviar e Receber Mensagem, dentre outras operações comuns ou exclusivas de cada aplicativo no mercado.

Polimorfismo Podemos  observar no contexto de Abstração e Herança que conseguimos criar uma singularidade estrutural de nossos elementos. Isso quer dizer que qualquer classe que deseja representar um serviço de mensagem,
basta estender a classe ServicoMensagemInstantanea e implementar os respectivos métodos abstratos. O que vale reforça aqui é, cada classe terá a mesma ação executando procedimentos de maneira especializada.
